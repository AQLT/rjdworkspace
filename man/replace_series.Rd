% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/replace_series.R
\name{replace_series}
\alias{replace_series}
\alias{verif_duplicates}
\alias{verif_ws_duplicates}
\title{Function to automate the replacement of selected series and their metadata by the same series from another workspace
This function allows to update a selection of series. It is the partial version of the update_metadata function,
of the rjdworkspace package.}
\usage{
replace_series(ws1, ws2, mp_name, selected_series,
  print_indications = FALSE)

verif_duplicates(s)

verif_ws_duplicates(ws, print_indications = FALSE)
}
\arguments{
\item{ws1}{The workspace to update}

\item{ws2}{The workspace containing the most up-to-date version of the selected_series series}

\item{mp_name}{The name of the multiprocessing containing the series to update}

\item{selected_series}{The vector containing the series-to-update's names.}

\item{print_indications}{A boolean to print indications on the processing status}

\item{s}{a list of characters}

\item{ws}{The workspace to scan}

\item{print_indications}{A boolean to print indications on the processing status}
}
\value{
the updated \code{workspace}

If there are no duplicates, the function returns an empty data frame. 
Otherwise, it returns a data frame giving the name and number of duplicates found within the argument (list).

a list containing the name and number of occurences of duplicated SAPs and series
}
\description{
Function to automate the replacement of selected series and their metadata by the same series from another workspace
This function allows to update a selection of series. It is the partial version of the update_metadata function,
of the rjdworkspace package.

Auxiliary functions
Generic function to identify and return the duplicates in a list

Function to identify duplicated series in a SAProcessing (SAP) or of SAProcessings in a workspace
}
\examples{
\dontrun{replace_series(ws1, ws2, "SAProcessing-1", c("serie1", "serie2"), TRUE)}
\dontrun{
s <- c("a","b","a","c","a","c")
result <- verif_duplicates(s)
result
}
}
